name: Deploy Node.js App to EKS  # Workflow name

on:
  push:
    branches:
      - "main1"  # Trigger on push to feature branch
  pull_request:
    branches:
      - "main1"  # Trigger on pull requests to feature branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: staging  # Specify the environment

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Checkout the code from the repository

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.29.0'  # Specify the kubectl version

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  # AWS Access Key
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # AWS Secret Access Key
          aws-region: ap-south-1  # AWS Region

      - name: Set up EKS kubeconfig
        run: |
          aws eks update-kubeconfig --name eks-dev-cluster --region ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2  # Login to Amazon ECR

      - name: Get commit hash
        id: get-commit-hash
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Get timestamp
        id: get-timestamp
        run: echo "TIMESTAMP=$(date +'%Y-%m-%d-%H-%M')" >> $GITHUB_ENV

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: server  # Your ECR repository name
          COMMIT_HASH: ${{ env.COMMIT_HASH }}  # Accessing the commit hash
          TIMESTAMP: ${{ env.TIMESTAMP }}      # Accessing the timestamp
        run: |
          IMAGE_TAG=staging-${COMMIT_HASH}-${TIMESTAMP}
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update Helm values.yaml with the latest image
        run: |
          IMAGE_TAG=staging-${COMMIT_HASH}-${TIMESTAMP}  # Define the latest image tag
          sed -i "s|image: .*|image: ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}|" helm-chart-server/values.yaml

      - name: Deploy to EKS using Helm
        run: |
          helm upgrade --install testing helm-chart-server --values helm-chart-server/values.yaml
